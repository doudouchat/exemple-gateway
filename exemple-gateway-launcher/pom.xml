<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>exemple</groupId>
		<artifactId>exemple-gateway</artifactId>
		<version>3.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>exemple-gateway-launcher</artifactId>

	<properties>

		<application.host>http://localhost</application.host>

		<test.contextpath>Test</test.contextpath>
		<test.path>${project.build.testOutputDirectory}/exemple-gateway-test.yml</test.path>

	</properties>

	<dependencyManagement>

		<dependencies>

			<!-- CUCUMBER -->

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-bom</artifactId>
				<version>7.17.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<!-- CORE -->

		<dependency>
			<groupId>exemple</groupId>
			<artifactId>exemple-gateway-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- RESOURCE TEST -->

		<dependency>
			<groupId>exemple</groupId>
			<artifactId>exemple-gateway-integration-resource</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- SPRING BOOT -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- REST ASSURED -->

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- TEST -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- CUCUMBER -->

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUNIT PLATEFORM -->

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>

			<plugins>

				<!-- TEST INTEGRATION -->
				<!-- http://maven.apache.org/surefire/maven-failsafe-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- DEPLOY -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- SPRING BOOT -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<attach>false</attach>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>gateway</id>

			<properties>
				<docker.buildArg.VERSION_OPENJDK>${maven.compiler.target}-jdk-buster</docker.buildArg.VERSION_OPENJDK>
			</properties>

			<dependencies>

				<!-- RESOURCE TEST -->

				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>exemple-gateway-integration-resource</artifactId>
					<version>${project.version}</version>
				</dependency>

			</dependencies>

			<build>

				<plugins>

					<!-- HELPER -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<portNames>
										<portName>application.port</portName>
										<portName>application.browser.port</portName>
										<portName>test.port</portName>
										<portName>hazelcast.port</portName>
									</portNames>
								</configuration>
							</execution>
							<execution>
								<id>get-local-ip</id>
								<goals>
									<goal>local-ip</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- JACOCO -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>com/exemple/gateway/integration/**</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>dump</id>
								<goals>
									<goal>dump</goal>
								</goals>
								<configuration>
									<address>127.0.0.1</address>
									<port>6300</port>
									<destFile>${project.build.directory}/jacoco-it.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>dump-browser</id>
								<goals>
									<goal>dump</goal>
								</goals>
								<configuration>
									<address>127.0.0.1</address>
									<port>6301</port>
									<destFile>${project.build.directory}/jacoco-it.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- COPY JACOCO JAR AGENT -->

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.agent</artifactId>
									<version>${jacoco-version}</version>
									<classifier>runtime</classifier>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
									<destFileName>jacocoagent.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</plugin>


					<!-- DOCKER -->
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build_exemple_gateway</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<images>
										<image>
											<name>exemple-gateway</name>
											<build>
												<dockerFile>${basedir}/../Dockerfile</dockerFile>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>build_resource_test</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<images>
										<image>
											<name>exemple-resource-test</name>
											<build>
												<dockerFile>${project.parent.basedir}/exemple-gateway-integration-resource/Dockerfile</dockerFile>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_resource_test</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>exemple-resource-test</name>
											<alias>exemple-resource-test</alias>
											<run>
												<ports>
													<port>${test.port}:8080</port>
												</ports>
												<env>
													<server.servlet.context-path>/Test</server.servlet.context-path>
												</env>
												<wait>
													<http>
														<url>http://localhost:${test.port}/Test/actuator/health</url>
														<method>GET</method>
														<status>200</status>
													</http>
													<time>20000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_hazelcast</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>hazelcast/hazelcast:${hazelcast.version}</name>
											<alias>hazelcast</alias>
											<run>
												<ports>
													<port>${hazelcast.port}:5701</port>
												</ports>
												<env>
													<JAVA_OPTS>-Dhazelcast.config=/usr/local/etc/hazelcast/hazelcast_server.yaml</JAVA_OPTS>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.testOutputDirectory}/conf:/usr/local/etc/hazelcast/</volume>
													</bind>
												</volumes>
												<wait>
													<http>
														<url>http://localhost:${hazelcast.port}/hazelcast/health/ready</url>
														<method>GET</method>
														<status>200</status>
													</http>
													<time>30000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_exemple_gateway</id>
								<goals>
									<goal>start</goal>
									<goal>copy</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>exemple-gateway</name>
											<alias>exemple-gateway</alias>
											<run>
												<ports>
													<port>${application.port}:8080</port>
													<port>6300:6300</port>
												</ports>
												<env>
													<spring.config.location>/usr/local/etc/gateway/exemple-gateway.yml</spring.config.location>
													<server.servlet.context-path>/</server.servlet.context-path>
													<JAVA_TOOL_OPTIONS>-javaagent:/usr/local/etc/gateway/lib/jacocoagent.jar=includes=com.exemple.gateway.*,excludes=*EnhancerBySpringCGLIB*:*FastClassBySpringCGLIB*,output=tcpserver,address=*,classdumpdir=/usr/local/tomcat/etc/source</JAVA_TOOL_OPTIONS>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.testOutputDirectory}/conf:/usr/local/etc/gateway</volume>
														<volume>${project.build.directory}/lib:/usr/local/etc/gateway/lib</volume>
													</bind>
												</volumes>
												<wait>
													<http>
														<url>http://localhost:${application.port}/actuator/health</url>
														<method>GET</method>
														<status>200</status>
													</http>
													<time>30000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
												<extraHosts>
													<host>host.docker.internal:${local.ip}</host>
												</extraHosts>
											</run>
											<copy>
												<entries>
													<entry>
														<containerPath>tmp/logs</containerPath>
														<hostDirectory>${project.build.directory}/api</hostDirectory>
													</entry>
													<entry>
														<containerPath>/usr/local/tomcat/etc/source/com</containerPath>
														<hostDirectory>${project.build.outputDirectory}</hostDirectory>
													</entry>
												</entries>
											</copy>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_exemple_gateway_browser</id>
								<goals>
									<goal>start</goal>
									<goal>copy</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>exemple-gateway</name>
											<alias>exemple-gateway-browser</alias>
											<run>
												<ports>
													<port>${application.browser.port}:8080</port>
													<port>6301:6301</port>
												</ports>
												<env>
													<spring.config.location>/usr/local/etc/gateway/exemple-gateway.yml</spring.config.location>
													<server.servlet.context-path>/</server.servlet.context-path>
													<spring.profiles.active>browser</spring.profiles.active>
													<JAVA_TOOL_OPTIONS>-javaagent:/usr/local/etc/gateway/lib/jacocoagent.jar=includes=com.exemple.gateway.*,output=tcpserver,address=*,port=6301</JAVA_TOOL_OPTIONS>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.testOutputDirectory}/conf:/usr/local/etc/gateway</volume>
														<volume>${project.build.directory}/lib:/usr/local/etc/gateway/lib</volume>
													</bind>
												</volumes>
												<wait>
													<http>
														<url>http://localhost:${application.browser.port}/actuator/health</url>
														<method>GET</method>
														<status>200</status>
													</http>
													<time>30000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
												<extraHosts>
													<host>host.docker.internal:${local.ip}</host>
												</extraHosts>
											</run>
											<copy>
												<entries>
													<entry>
														<containerPath>tmp/logs</containerPath>
														<hostDirectory>${project.build.directory}/browser</hostDirectory>
													</entry>
												</entries>
											</copy>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>stop_all</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>

		<profile>
			<id>it</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<application.host>${application.host}</application.host>
								<application.port>${application.port}</application.port>
								<application.browser.port>${application.browser.port}</application.browser.port>
								<application.contextpath>${test.contextpath}</application.contextpath>
							</systemPropertyVariables>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>